CMAKE_MINIMUM_REQUIRED(VERSION 3.0 FATAL_ERROR)

#Set the project name
PROJECT(Class)

# Set the cmake module find path
SET ( CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} ${CMAKE_CURRENT_LIST_DIR}/cmake)

# check for and enable c++11 support
INCLUDE(CheckCXXCompilerFlag)
CHECK_CXX_COMPILER_FLAG("-std=c++11" COMPILER_SUPPORTS_CXX11)
IF(COMPILER_SUPPORTS_CXX11)
    SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")
ELSE()
    MESSAGE(STATUS "The compiler ${CMAKE_CXX_COMPILER} has no C++11 support. Please use a different C++ compiler.")
ENDIF()
SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fPIC")


# Find ROOT
LIST(APPEND CMAKE_PREFIX_PATH $ENV{ROOTSYS})
FIND_PACKAGE(ROOT REQUIRED COMPONENTS TMVA)
MESSAGE("--    ROOT Root: ${ROOTSYS}")
MESSAGE("--    ROOT Include directory: ${ROOT_INCLUDE_DIR}")
MESSAGE("--    ROOT Library directories: ${ROOT_LIBRARY_DIRS}")
MESSAGE("--    ROOT Libraries: ${ROOT_LIBRARIES}")
MESSAGE("--    ROOT Root Use File : ${ROOT_USE_FILE}")
INCLUDE(${ROOT_USE_FILE})
INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR} ${ROOT_INCLUDE_DIRS})
ADD_DEFINITIONS(${ROOT_CXX_FLAGS})

#Set CLASS variable
SET(CYCLASS_INCLUDE_DIRS $ROOT_INCLUDE_DIRS )
SET(LIBS ${LIBS} ${ROOT_LIBRARIES})

# Set install folder (durty to be change?)
SET(CMAKE_INSTALL_LIBDIR ${CMAKE_CURRENT_LIST_DIR}/lib)
SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_CURRENT_LIST_DIR}/lib)
SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_CURRENT_LIST_DIR}/lib)
MESSAGE( STATUS "CMAKE_INSTALL_LIBDIR :" ${CMAKE_INSTALL_LIBDIR})
MESSAGE( STATUS "CMAKE_LIBRARY_OUTPUT_DIRECTORY :" ${CMAKE_LIBRARY_OUTPUT_DIRECTORY})
MESSAGE( STATUS "CMAKE_ARCHIVE_OUTPUT_DIRECTORY :" ${CMAKE_ARCHIVE_OUTPUT_DIRECTORY})

# Go look into Source folder
ADD_SUBDIRECTORY(source)


