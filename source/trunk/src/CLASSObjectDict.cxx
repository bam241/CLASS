//
// File generated by rootcint at Mon Jun  2 14:42:33 2014

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME CLASSObjectDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "CLASSObjectDict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void CLASSObject_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_CLASSObject(void *p = 0);
   static void *newArray_CLASSObject(Long_t size, void *p);
   static void delete_CLASSObject(void *p);
   static void deleteArray_CLASSObject(void *p);
   static void destruct_CLASSObject(void *p);
   static void streamer_CLASSObject(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::CLASSObject*)
   {
      ::CLASSObject *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::CLASSObject >(0);
      static ::ROOT::TGenericClassInfo 
         instance("CLASSObject", ::CLASSObject::Class_Version(), "./../include/CLASSObject.hxx", 38,
                  typeid(::CLASSObject), DefineBehavior(ptr, ptr),
                  &::CLASSObject::Dictionary, isa_proxy, 0,
                  sizeof(::CLASSObject) );
      instance.SetNew(&new_CLASSObject);
      instance.SetNewArray(&newArray_CLASSObject);
      instance.SetDelete(&delete_CLASSObject);
      instance.SetDeleteArray(&deleteArray_CLASSObject);
      instance.SetDestructor(&destruct_CLASSObject);
      instance.SetStreamerFunc(&streamer_CLASSObject);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::CLASSObject*)
   {
      return GenerateInitInstanceLocal((::CLASSObject*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::CLASSObject*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *CLASSObject::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *CLASSObject::Class_Name()
{
   return "CLASSObject";
}

//______________________________________________________________________________
const char *CLASSObject::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::CLASSObject*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int CLASSObject::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::CLASSObject*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void CLASSObject::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::CLASSObject*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *CLASSObject::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::CLASSObject*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void CLASSObject::Streamer(TBuffer &R__b)
{
   // Stream an object of class CLASSObject.

   TNamed::Streamer(R__b);
}

//______________________________________________________________________________
void CLASSObject::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class CLASSObject.
      TClass *R__cl = ::CLASSObject::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fLog", &fLog);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsLog", &fIsLog);
      TNamed::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_CLASSObject(void *p) {
      return  p ? new(p) ::CLASSObject : new ::CLASSObject;
   }
   static void *newArray_CLASSObject(Long_t nElements, void *p) {
      return p ? new(p) ::CLASSObject[nElements] : new ::CLASSObject[nElements];
   }
   // Wrapper around operator delete
   static void delete_CLASSObject(void *p) {
      delete ((::CLASSObject*)p);
   }
   static void deleteArray_CLASSObject(void *p) {
      delete [] ((::CLASSObject*)p);
   }
   static void destruct_CLASSObject(void *p) {
      typedef ::CLASSObject current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_CLASSObject(TBuffer &buf, void *obj) {
      ((::CLASSObject*)obj)->::CLASSObject::Streamer(buf);
   }
} // end of namespace ROOT for class ::CLASSObject

/********************************************************
* CLASSObjectDict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableCLASSObjectDict();

extern "C" void G__set_cpp_environmentCLASSObjectDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("../include/CLASSObject.hxx");
  G__cpp_reset_tagtableCLASSObjectDict();
}
#include <new>
extern "C" int G__cpp_dllrevCLASSObjectDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* CLASSObject */
static int G__CLASSObjectDict_184_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CLASSObject* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CLASSObject[n];
     } else {
       p = new((void*) gvp) CLASSObject[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CLASSObject;
     } else {
       p = new((void*) gvp) CLASSObject;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__CLASSObjectDictLN_CLASSObject));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CLASSObjectDict_184_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((CLASSObject*) G__getstructoffset())->Clone());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CLASSObjectDict_184_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CLASSObject*) G__getstructoffset())->SetLog((LogFile*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CLASSObjectDict_184_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((CLASSObject*) G__getstructoffset())->GetLog());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CLASSObjectDict_184_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((CLASSObject*) G__getstructoffset())->IsLog());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CLASSObjectDict_184_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) CLASSObject::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CLASSObjectDict_184_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CLASSObject::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CLASSObjectDict_184_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) CLASSObject::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CLASSObjectDict_184_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      CLASSObject::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CLASSObjectDict_184_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CLASSObject*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CLASSObjectDict_184_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CLASSObject::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CLASSObjectDict_184_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CLASSObject::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CLASSObjectDict_184_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CLASSObject::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CLASSObjectDict_184_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CLASSObject::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__CLASSObjectDict_184_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   CLASSObject* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new CLASSObject(*(CLASSObject*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__CLASSObjectDictLN_CLASSObject));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef CLASSObject G__TCLASSObject;
static int G__CLASSObjectDict_184_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (CLASSObject*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((CLASSObject*) (soff+(sizeof(CLASSObject)*i)))->~G__TCLASSObject();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (CLASSObject*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((CLASSObject*) (soff))->~G__TCLASSObject();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__CLASSObjectDict_184_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CLASSObject* dest = (CLASSObject*) G__getstructoffset();
   *dest = *(CLASSObject*) libp->para[0].ref;
   const CLASSObject& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* CLASSObject */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncCLASSObjectDict {
 public:
  G__Sizep2memfuncCLASSObjectDict(): p(&G__Sizep2memfuncCLASSObjectDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncCLASSObjectDict::*p)();
};

size_t G__get_sizep2memfuncCLASSObjectDict()
{
  G__Sizep2memfuncCLASSObjectDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceCLASSObjectDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__CLASSObjectDictLN_CLASSObject))) {
     CLASSObject *G__Lderived;
     G__Lderived=(CLASSObject*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__CLASSObjectDictLN_CLASSObject),G__get_linked_tagnum(&G__CLASSObjectDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__CLASSObjectDictLN_CLASSObject),G__get_linked_tagnum(&G__CLASSObjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableCLASSObjectDict() {

   /* Setting up typedef entry */
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__CLASSObjectDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__CLASSObjectDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__CLASSObjectDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__CLASSObjectDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__CLASSObjectDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__CLASSObjectDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__CLASSObjectDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__CLASSObjectDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__CLASSObjectDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__CLASSObjectDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* CLASSObject */
static void G__setup_memvarCLASSObject(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__CLASSObjectDictLN_CLASSObject));
   { CLASSObject *p; p=(CLASSObject*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__CLASSObjectDictLN_LogFile),-1,-1,4,"fLog=",0,"!< Pointer to the Log");
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"fIsLog=",0,"!< Set at true if a LogFile are define");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__CLASSObjectDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarCLASSObjectDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncCLASSObject(void) {
   /* CLASSObject */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__CLASSObjectDictLN_CLASSObject));
   G__memfunc_setup("CLASSObject",973,G__CLASSObjectDict_184_0_1, 105, G__get_linked_tagnum(&G__CLASSObjectDictLN_CLASSObject), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clone",497,G__CLASSObjectDict_184_0_2, 85, G__get_linked_tagnum(&G__CLASSObjectDictLN_CLASSObject), -1, 0, 0, 1, 1, 0, "", "!< Correct way to copy a CLASSObject in case of derivation", (void*) NULL, 1);
   G__memfunc_setup("SetLog",590,G__CLASSObjectDict_184_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "U 'LogFile' - 0 - log", "!< Set the LogFile", (void*) NULL, 0);
   G__memfunc_setup("GetLog",578,G__CLASSObjectDict_184_0_4, 85, G__get_linked_tagnum(&G__CLASSObjectDictLN_LogFile), -1, 0, 0, 1, 1, 0, "", "!< Return the Pointer to the Log", (void*) NULL, 0);
   G__memfunc_setup("IsLog",478,G__CLASSObjectDict_184_0_5, 103, -1, -1, 0, 0, 1, 1, 0, "", "!< reutrn true if a LogFile is defined", (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__CLASSObjectDict_184_0_6, 85, G__get_linked_tagnum(&G__CLASSObjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&CLASSObject::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__CLASSObjectDict_184_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CLASSObject::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__CLASSObjectDict_184_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&CLASSObject::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__CLASSObjectDict_184_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&CLASSObject::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__CLASSObjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__CLASSObjectDict_184_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__CLASSObjectDict_184_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CLASSObject::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__CLASSObjectDict_184_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&CLASSObject::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__CLASSObjectDict_184_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CLASSObject::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__CLASSObjectDict_184_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&CLASSObject::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("CLASSObject", 973, G__CLASSObjectDict_184_0_18, (int) ('i'), G__get_linked_tagnum(&G__CLASSObjectDictLN_CLASSObject), -1, 0, 1, 1, 1, 0, "u 'CLASSObject' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~CLASSObject", 1099, G__CLASSObjectDict_184_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__CLASSObjectDict_184_0_20, (int) ('u'), G__get_linked_tagnum(&G__CLASSObjectDictLN_CLASSObject), -1, 1, 1, 1, 1, 0, "u 'CLASSObject' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncCLASSObjectDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalCLASSObjectDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcCLASSObjectDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__CLASSObjectDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__CLASSObjectDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__CLASSObjectDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__CLASSObjectDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__CLASSObjectDictLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__CLASSObjectDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__CLASSObjectDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__CLASSObjectDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__CLASSObjectDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__CLASSObjectDictLN_LogFile = { "LogFile" , 99 , -1 };
G__linked_taginfo G__CLASSObjectDictLN_CLASSObject = { "CLASSObject" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableCLASSObjectDict() {
  G__CLASSObjectDictLN_TClass.tagnum = -1 ;
  G__CLASSObjectDictLN_TBuffer.tagnum = -1 ;
  G__CLASSObjectDictLN_TMemberInspector.tagnum = -1 ;
  G__CLASSObjectDictLN_TObject.tagnum = -1 ;
  G__CLASSObjectDictLN_TNamed.tagnum = -1 ;
  G__CLASSObjectDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__CLASSObjectDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__CLASSObjectDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__CLASSObjectDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__CLASSObjectDictLN_LogFile.tagnum = -1 ;
  G__CLASSObjectDictLN_CLASSObject.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableCLASSObjectDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__CLASSObjectDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__CLASSObjectDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__CLASSObjectDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__CLASSObjectDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__CLASSObjectDictLN_TNamed);
   G__get_linked_tagnum_fwd(&G__CLASSObjectDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__CLASSObjectDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__CLASSObjectDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__CLASSObjectDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__CLASSObjectDictLN_LogFile);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__CLASSObjectDictLN_CLASSObject),sizeof(CLASSObject),-1,61696,(char*)NULL,G__setup_memvarCLASSObject,G__setup_memfuncCLASSObject);
}
extern "C" void G__cpp_setupCLASSObjectDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupCLASSObjectDict()");
  G__set_cpp_environmentCLASSObjectDict();
  G__cpp_setup_tagtableCLASSObjectDict();

  G__cpp_setup_inheritanceCLASSObjectDict();

  G__cpp_setup_typetableCLASSObjectDict();

  G__cpp_setup_memvarCLASSObjectDict();

  G__cpp_setup_memfuncCLASSObjectDict();
  G__cpp_setup_globalCLASSObjectDict();
  G__cpp_setup_funcCLASSObjectDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncCLASSObjectDict();
  return;
}
class G__cpp_setup_initCLASSObjectDict {
  public:
    G__cpp_setup_initCLASSObjectDict() { G__add_setup_func("CLASSObjectDict",(G__incsetup)(&G__cpp_setupCLASSObjectDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initCLASSObjectDict() { G__remove_setup_func("CLASSObjectDict"); }
};
G__cpp_setup_initCLASSObjectDict G__cpp_setup_initializerCLASSObjectDict;

