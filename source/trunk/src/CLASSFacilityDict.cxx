//
// File generated by rootcint at Mon Jun  2 14:42:34 2014

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME CLASSFacilityDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "CLASSFacilityDict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void CLASSFacility_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_CLASSFacility(void *p = 0);
   static void *newArray_CLASSFacility(Long_t size, void *p);
   static void delete_CLASSFacility(void *p);
   static void deleteArray_CLASSFacility(void *p);
   static void destruct_CLASSFacility(void *p);
   static void streamer_CLASSFacility(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::CLASSFacility*)
   {
      ::CLASSFacility *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::CLASSFacility >(0);
      static ::ROOT::TGenericClassInfo 
         instance("CLASSFacility", ::CLASSFacility::Class_Version(), "./../include/CLASSFacility.hxx", 40,
                  typeid(::CLASSFacility), DefineBehavior(ptr, ptr),
                  &::CLASSFacility::Dictionary, isa_proxy, 0,
                  sizeof(::CLASSFacility) );
      instance.SetNew(&new_CLASSFacility);
      instance.SetNewArray(&newArray_CLASSFacility);
      instance.SetDelete(&delete_CLASSFacility);
      instance.SetDeleteArray(&deleteArray_CLASSFacility);
      instance.SetDestructor(&destruct_CLASSFacility);
      instance.SetStreamerFunc(&streamer_CLASSFacility);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::CLASSFacility*)
   {
      return GenerateInitInstanceLocal((::CLASSFacility*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::CLASSFacility*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *CLASSFacility::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *CLASSFacility::Class_Name()
{
   return "CLASSFacility";
}

//______________________________________________________________________________
const char *CLASSFacility::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::CLASSFacility*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int CLASSFacility::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::CLASSFacility*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void CLASSFacility::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::CLASSFacility*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *CLASSFacility::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::CLASSFacility*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void CLASSFacility::Streamer(TBuffer &R__b)
{
   // Stream an object of class CLASSFacility.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      CLASSObject::Streamer(R__b);
      R__b >> fIsStarted;
      R__b >> fIsShutDown;
      R__b >> fIsAtEndOfCycle;
      R__b >> fInternalTime;
      R__b >> fInCycleTime;
      R__b >> fCycleTime;
      fInsideIV.Streamer(R__b);
      fCumulativeIVIn.Streamer(R__b);
      fCumulativeIVOut.Streamer(R__b);
      R__b >> fFacilityType;
      R__b >> fCreationTime;
      R__b >> fLifeTime;
      R__b.CheckByteCount(R__s, R__c, CLASSFacility::IsA());
   } else {
      R__c = R__b.WriteVersion(CLASSFacility::IsA(), kTRUE);
      CLASSObject::Streamer(R__b);
      R__b << fIsStarted;
      R__b << fIsShutDown;
      R__b << fIsAtEndOfCycle;
      R__b << fInternalTime;
      R__b << fInCycleTime;
      R__b << fCycleTime;
      fInsideIV.Streamer(R__b);
      fCumulativeIVIn.Streamer(R__b);
      fCumulativeIVOut.Streamer(R__b);
      R__b << fFacilityType;
      R__b << fCreationTime;
      R__b << fLifeTime;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void CLASSFacility::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class CLASSFacility.
      TClass *R__cl = ::CLASSFacility::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsStarted", &fIsStarted);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsShutDown", &fIsShutDown);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsAtEndOfCycle", &fIsAtEndOfCycle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fInternalTime", &fInternalTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fInCycleTime", &fInCycleTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCycleTime", &fCycleTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fInsideIV", &fInsideIV);
      R__insp.InspectMember(fInsideIV, "fInsideIV.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCumulativeIVIn", &fCumulativeIVIn);
      R__insp.InspectMember(fCumulativeIVIn, "fCumulativeIVIn.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCumulativeIVOut", &fCumulativeIVOut);
      R__insp.InspectMember(fCumulativeIVOut, "fCumulativeIVOut.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fId", &fId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFacilityType", &fFacilityType);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fParc", &fParc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCreationTime", &fCreationTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLifeTime", &fLifeTime);
      CLASSObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_CLASSFacility(void *p) {
      return  p ? new(p) ::CLASSFacility : new ::CLASSFacility;
   }
   static void *newArray_CLASSFacility(Long_t nElements, void *p) {
      return p ? new(p) ::CLASSFacility[nElements] : new ::CLASSFacility[nElements];
   }
   // Wrapper around operator delete
   static void delete_CLASSFacility(void *p) {
      delete ((::CLASSFacility*)p);
   }
   static void deleteArray_CLASSFacility(void *p) {
      delete [] ((::CLASSFacility*)p);
   }
   static void destruct_CLASSFacility(void *p) {
      typedef ::CLASSFacility current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_CLASSFacility(TBuffer &buf, void *obj) {
      ((::CLASSFacility*)obj)->::CLASSFacility::Streamer(buf);
   }
} // end of namespace ROOT for class ::CLASSFacility

/********************************************************
* CLASSFacilityDict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableCLASSFacilityDict();

extern "C" void G__set_cpp_environmentCLASSFacilityDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("../include/CLASSFacility.hxx");
  G__cpp_reset_tagtableCLASSFacilityDict();
}
#include <new>
extern "C" int G__cpp_dllrevCLASSFacilityDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* CLASSFacility */
static int G__CLASSFacilityDict_492_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CLASSFacility* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CLASSFacility[n];
     } else {
       p = new((void*) gvp) CLASSFacility[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CLASSFacility;
     } else {
       p = new((void*) gvp) CLASSFacility;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__CLASSFacilityDictLN_CLASSFacility));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CLASSFacilityDict_492_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const CLASSFacility*) G__getstructoffset())->GetId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CLASSFacilityDict_492_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const IsotopicVector* pobj;
         const IsotopicVector xobj = ((const CLASSFacility*) G__getstructoffset())->GetInsideIV();
         pobj = new IsotopicVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CLASSFacilityDict_492_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const CLASSFacility*) G__getstructoffset())->GetFacilityType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CLASSFacilityDict_492_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letLonglong(result7, 110, (G__int64) ((const CLASSFacility*) G__getstructoffset())->GetInternalTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CLASSFacilityDict_492_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letLonglong(result7, 110, (G__int64) ((const CLASSFacility*) G__getstructoffset())->GetCycleTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CLASSFacilityDict_492_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letLonglong(result7, 110, (G__int64) ((const CLASSFacility*) G__getstructoffset())->GetCreationTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CLASSFacilityDict_492_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letLonglong(result7, 110, (G__int64) ((const CLASSFacility*) G__getstructoffset())->GetLifeTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CLASSFacilityDict_492_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((CLASSFacility*) G__getstructoffset())->GetParc());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CLASSFacilityDict_492_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         IsotopicVector* pobj;
         IsotopicVector xobj = ((CLASSFacility*) G__getstructoffset())->GetCumulativeIVIn();
         pobj = new IsotopicVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CLASSFacilityDict_492_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         IsotopicVector* pobj;
         IsotopicVector xobj = ((CLASSFacility*) G__getstructoffset())->GetCumulativeIVOut();
         pobj = new IsotopicVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CLASSFacilityDict_492_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CLASSFacility*) G__getstructoffset())->SetId((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CLASSFacilityDict_492_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CLASSFacility*) G__getstructoffset())->SetParc((CLASS*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CLASSFacilityDict_492_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CLASSFacility*) G__getstructoffset())->SetFacilityType((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CLASSFacilityDict_492_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CLASSFacility*) G__getstructoffset())->SetInsideIV(*((IsotopicVector*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CLASSFacilityDict_492_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CLASSFacility*) G__getstructoffset())->SetCreationTime((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CLASSFacilityDict_492_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CLASSFacility*) G__getstructoffset())->SetLifeTime((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CLASSFacilityDict_492_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CLASSFacility*) G__getstructoffset())->SetCycleTime((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CLASSFacilityDict_492_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CLASSFacility*) G__getstructoffset())->SetInCycleTime((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CLASSFacilityDict_492_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CLASSFacility*) G__getstructoffset())->SetInternalTime((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CLASSFacilityDict_492_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CLASSFacility*) G__getstructoffset())->AddCumulativeIVIn(*((IsotopicVector*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CLASSFacilityDict_492_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CLASSFacility*) G__getstructoffset())->AddCumulativeIVOut(*((IsotopicVector*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CLASSFacilityDict_492_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CLASSFacility*) G__getstructoffset())->Evolution((cSecond) G__Longlong(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CLASSFacilityDict_492_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CLASSFacility*) G__getstructoffset())->Dump();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CLASSFacilityDict_492_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) CLASSFacility::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CLASSFacilityDict_492_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CLASSFacility::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CLASSFacilityDict_492_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) CLASSFacility::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CLASSFacilityDict_492_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      CLASSFacility::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CLASSFacilityDict_492_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CLASSFacility*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CLASSFacilityDict_492_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CLASSFacility::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CLASSFacilityDict_492_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CLASSFacility::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CLASSFacilityDict_492_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CLASSFacility::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CLASSFacilityDict_492_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CLASSFacility::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__CLASSFacilityDict_492_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   CLASSFacility* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new CLASSFacility(*(CLASSFacility*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__CLASSFacilityDictLN_CLASSFacility));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef CLASSFacility G__TCLASSFacility;
static int G__CLASSFacilityDict_492_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (CLASSFacility*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((CLASSFacility*) (soff+(sizeof(CLASSFacility)*i)))->~G__TCLASSFacility();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (CLASSFacility*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((CLASSFacility*) (soff))->~G__TCLASSFacility();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__CLASSFacilityDict_492_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CLASSFacility* dest = (CLASSFacility*) G__getstructoffset();
   *dest = *(CLASSFacility*) libp->para[0].ref;
   const CLASSFacility& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* CLASSFacility */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncCLASSFacilityDict {
 public:
  G__Sizep2memfuncCLASSFacilityDict(): p(&G__Sizep2memfuncCLASSFacilityDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncCLASSFacilityDict::*p)();
};

size_t G__get_sizep2memfuncCLASSFacilityDict()
{
  G__Sizep2memfuncCLASSFacilityDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceCLASSFacilityDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__CLASSFacilityDictLN_CLASSFacility))) {
     CLASSFacility *G__Lderived;
     G__Lderived=(CLASSFacility*)0x1000;
     {
       CLASSObject *G__Lpbase=(CLASSObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__CLASSFacilityDictLN_CLASSFacility),G__get_linked_tagnum(&G__CLASSFacilityDictLN_CLASSObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__CLASSFacilityDictLN_CLASSFacility),G__get_linked_tagnum(&G__CLASSFacilityDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__CLASSFacilityDictLN_CLASSFacility),G__get_linked_tagnum(&G__CLASSFacilityDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableCLASSFacilityDict() {

   /* Setting up typedef entry */
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__CLASSFacilityDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__CLASSFacilityDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__CLASSFacilityDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__CLASSFacilityDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__CLASSFacilityDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__CLASSFacilityDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__CLASSFacilityDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__CLASSFacilityDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__CLASSFacilityDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__CLASSFacilityDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("cSecond",110,-1,0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<ZAI,double>",117,G__get_linked_tagnum(&G__CLASSFacilityDictLN_maplEZAIcOdoublecOlesslEZAIgRcOallocatorlEpairlEconstsPZAIcOdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<ZAI,double,less<ZAI> >",117,G__get_linked_tagnum(&G__CLASSFacilityDictLN_maplEZAIcOdoublecOlesslEZAIgRcOallocatorlEpairlEconstsPZAIcOdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ZAI>",117,G__get_linked_tagnum(&G__CLASSFacilityDictLN_vectorlEZAIcOallocatorlEZAIgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__CLASSFacilityDictLN_reverse_iteratorlEvectorlEZAIcOallocatorlEZAIgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__CLASSFacilityDictLN_vectorlEZAIcOallocatorlEZAIgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__CLASSFacilityDictLN_reverse_iteratorlEvectorlEZAIcOallocatorlEZAIgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__CLASSFacilityDictLN_vectorlEZAIcOallocatorlEZAIgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__CLASSFacilityDictLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__CLASSFacilityDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__CLASSFacilityDictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__CLASSFacilityDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__CLASSFacilityDictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__CLASSFacilityDictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__CLASSFacilityDictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__CLASSFacilityDictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__CLASSFacilityDictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__CLASSFacilityDictLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__CLASSFacilityDictLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__CLASSFacilityDictLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__CLASSFacilityDictLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__CLASSFacilityDictLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__CLASSFacilityDictLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__CLASSFacilityDictLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__CLASSFacilityDictLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__CLASSFacilityDictLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__CLASSFacilityDictLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__CLASSFacilityDictLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__CLASSFacilityDictLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__CLASSFacilityDictLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__CLASSFacilityDictLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__CLASSFacilityDictLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__CLASSFacilityDictLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__CLASSFacilityDictLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<ZAI,TGraph*>",117,G__get_linked_tagnum(&G__CLASSFacilityDictLN_maplEZAIcOTGraphmUcOlesslEZAIgRcOallocatorlEpairlEconstsPZAIcOTGraphmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<ZAI,TGraph*,less<ZAI> >",117,G__get_linked_tagnum(&G__CLASSFacilityDictLN_maplEZAIcOTGraphmUcOlesslEZAIgRcOallocatorlEpairlEconstsPZAIcOTGraphmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<ZAI,EvolutionData>",117,G__get_linked_tagnum(&G__CLASSFacilityDictLN_maplEZAIcOEvolutionDatacOlesslEZAIgRcOallocatorlEpairlEconstsPZAIcOEvolutionDatagRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<ZAI,EvolutionData,less<ZAI> >",117,G__get_linked_tagnum(&G__CLASSFacilityDictLN_maplEZAIcOEvolutionDatacOlesslEZAIgRcOallocatorlEpairlEconstsPZAIcOEvolutionDatagRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* CLASSFacility */
static void G__setup_memvarCLASSFacility(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__CLASSFacilityDictLN_CLASSFacility));
   { CLASSFacility *p; p=(CLASSFacility*)0x1000; if (p) { }
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"fIsStarted=",0,"/< True if Running, False Otherwise");
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"fIsShutDown=",0,"/< True if the facility is stoped, False Otherwise");
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"fIsAtEndOfCycle=",0,"/< True if Reaching the End of a Facility Cycle");
   G__memvar_setup((void*)0,110,0,0,-1,G__defined_typename("cSecond"),-1,2,"fInternalTime=",0,"/< Internal Clock");
   G__memvar_setup((void*)0,110,0,0,-1,G__defined_typename("cSecond"),-1,2,"fInCycleTime=",0,"/< Time spend since the beginning of the last Cycle");
   G__memvar_setup((void*)0,110,0,0,-1,G__defined_typename("cSecond"),-1,2,"fCycleTime=",0,"/< Cycle duration Time");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__CLASSFacilityDictLN_IsotopicVector),-1,-1,2,"fInsideIV=",0,"/< All IV in the Facility (fuel for reactor, total for all others...)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__CLASSFacilityDictLN_IsotopicVector),-1,-1,2,"fCumulativeIVIn=",0,"/< All IV in the Facility (fuel for reactor, total for all others...)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__CLASSFacilityDictLN_IsotopicVector),-1,-1,2,"fCumulativeIVOut=",0,"/< All IV in the Facility (fuel for reactor, total for all others...)");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fId=",0,"!< Identity of the Facility inside the Parc");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fFacilityType=",0,"/< Type of facility :");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__CLASSFacilityDictLN_CLASS),-1,-1,4,"fParc=",0,"!< Pointer to the main Parc");
   G__memvar_setup((void*)0,110,0,0,-1,G__defined_typename("cSecond"),-1,4,"fCreationTime=",0,"/< CLASS Universal Time of Creation");
   G__memvar_setup((void*)0,110,0,0,-1,G__defined_typename("cSecond"),-1,4,"fLifeTime=",0,"/< LifeTime Of the Reactor (Operating's Duration)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__CLASSFacilityDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarCLASSFacilityDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncCLASSFacility(void) {
   /* CLASSFacility */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__CLASSFacilityDictLN_CLASSFacility));
   G__memfunc_setup("CLASSFacility",1195,G__CLASSFacilityDict_492_0_1, 105, G__get_linked_tagnum(&G__CLASSFacilityDictLN_CLASSFacility), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetId",461,G__CLASSFacilityDict_492_0_2, 105, -1, -1, 0, 0, 1, 1, 8, "", "!< Return the Facility Parc'Is", (void*) NULL, 0);
   G__memfunc_setup("GetInsideIV",1051,G__CLASSFacilityDict_492_0_3, 117, G__get_linked_tagnum(&G__CLASSFacilityDictLN_IsotopicVector), -1, 0, 0, 1, 1, 8, "", "!< Return the IV contain in the Facility", (void*) NULL, 0);
   G__memfunc_setup("GetFacilityType",1527,G__CLASSFacilityDict_492_0_4, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetInternalTime",1516,G__CLASSFacilityDict_492_0_5, 110, -1, G__defined_typename("cSecond"), 0, 0, 1, 1, 8, "", "!< Return Creation Time", (void*) NULL, 0);
   G__memfunc_setup("GetCycleTime",1183,G__CLASSFacilityDict_492_0_6, 110, -1, G__defined_typename("cSecond"), 0, 0, 1, 1, 8, "", "!< Return the cycle time of the Facility", (void*) NULL, 0);
   G__memfunc_setup("GetCreationTime",1508,G__CLASSFacilityDict_492_0_7, 110, -1, G__defined_typename("cSecond"), 0, 0, 1, 1, 8, "", "!< Return the creation time of the Facility", (void*) NULL, 0);
   G__memfunc_setup("GetLifeTime",1071,G__CLASSFacilityDict_492_0_8, 110, -1, G__defined_typename("cSecond"), 0, 0, 1, 1, 8, "", "!< Return the life time of the Facility", (void*) NULL, 0);
   G__memfunc_setup("GetParc",678,G__CLASSFacilityDict_492_0_9, 85, G__get_linked_tagnum(&G__CLASSFacilityDictLN_CLASS), -1, 0, 0, 1, 1, 0, "", "!< return the pointer to the Park", (void*) NULL, 0);
   G__memfunc_setup("GetCumulativeIVIn",1685,G__CLASSFacilityDict_492_0_10, 117, G__get_linked_tagnum(&G__CLASSFacilityDictLN_IsotopicVector), -1, 0, 0, 1, 1, 0, "", "!< return the culative sum of all incoming IV", (void*) NULL, 0);
   G__memfunc_setup("GetCumulativeIVOut",1814,G__CLASSFacilityDict_492_0_11, 117, G__get_linked_tagnum(&G__CLASSFacilityDictLN_IsotopicVector), -1, 0, 0, 1, 1, 0, "", "!< return the culative sum of all outcoming IV", (void*) NULL, 0);
   G__memfunc_setup("SetId",473,G__CLASSFacilityDict_492_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - id", "!< Set The Facility Parc'Id", (void*) NULL, 0);
   G__memfunc_setup("SetParc",690,G__CLASSFacilityDict_492_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "U 'CLASS' - 0 - parc", "!< Set the Pointer to the Parc", (void*) NULL, 0);
   G__memfunc_setup("SetFacilityType",1539,G__CLASSFacilityDict_492_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - type", "!< Set the facility type :", (void*) NULL, 0);
   G__memfunc_setup("SetInsideIV",1063,G__CLASSFacilityDict_492_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'IsotopicVector' - 0 - isotopicvector", "!< Set the IV inside the Facility Core", (void*) NULL, 0);
   G__memfunc_setup("SetCreationTime",1520,G__CLASSFacilityDict_492_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - creationtime", "!< Set the creation Time", (void*) NULL, 0);
   G__memfunc_setup("SetLifeTime",1083,G__CLASSFacilityDict_492_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - lifetime", "!< Set the life time of the facility", (void*) NULL, 0);
   G__memfunc_setup("SetCycleTime",1195,G__CLASSFacilityDict_492_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - cycletime", "!< Set the cycle time (Cycle of the loading Plan)", (void*) NULL, 1);
   G__memfunc_setup("SetInCycleTime",1378,G__CLASSFacilityDict_492_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - incycletime", "!< Set the cycle time (Cycle of the loading Plan)", (void*) NULL, 0);
   G__memfunc_setup("SetInternalTime",1528,G__CLASSFacilityDict_492_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - internaltime", "!< Set the cycle time (Cycle of the loading Plan)", (void*) NULL, 0);
   G__memfunc_setup("AddCumulativeIVIn",1662,G__CLASSFacilityDict_492_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'IsotopicVector' - 0 - IV", "!< Add the Input IsotopicVector the The cumulative IV IN", (void*) NULL, 0);
   G__memfunc_setup("AddCumulativeIVOut",1791,G__CLASSFacilityDict_492_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "u 'IsotopicVector' - 0 - IV", "!< Add the Input IsotopicVector the The cumulative IV OUT", (void*) NULL, 0);
   G__memfunc_setup("Evolution",965,G__CLASSFacilityDict_492_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "n - 'cSecond' 0 - t", "!< Performe the Evolution to the Time t", (void*) NULL, 1);
   G__memfunc_setup("Dump",406,G__CLASSFacilityDict_492_0_24, 121, -1, -1, 0, 0, 1, 1, 0, "", "!< Write Modification (IV In/Out, filling the TF...)", (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__CLASSFacilityDict_492_0_25, 85, G__get_linked_tagnum(&G__CLASSFacilityDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&CLASSFacility::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__CLASSFacilityDict_492_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CLASSFacility::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__CLASSFacilityDict_492_0_27, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&CLASSFacility::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__CLASSFacilityDict_492_0_28, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&CLASSFacility::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__CLASSFacilityDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__CLASSFacilityDict_492_0_32, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__CLASSFacilityDict_492_0_33, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CLASSFacility::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__CLASSFacilityDict_492_0_34, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&CLASSFacility::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__CLASSFacilityDict_492_0_35, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CLASSFacility::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__CLASSFacilityDict_492_0_36, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&CLASSFacility::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("CLASSFacility", 1195, G__CLASSFacilityDict_492_0_37, (int) ('i'), G__get_linked_tagnum(&G__CLASSFacilityDictLN_CLASSFacility), -1, 0, 1, 1, 1, 0, "u 'CLASSFacility' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~CLASSFacility", 1321, G__CLASSFacilityDict_492_0_38, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__CLASSFacilityDict_492_0_39, (int) ('u'), G__get_linked_tagnum(&G__CLASSFacilityDictLN_CLASSFacility), -1, 1, 1, 1, 1, 0, "u 'CLASSFacility' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncCLASSFacilityDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalCLASSFacilityDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcCLASSFacilityDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__CLASSFacilityDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__CLASSFacilityDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__CLASSFacilityDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__CLASSFacilityDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__CLASSFacilityDictLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__CLASSFacilityDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__CLASSFacilityDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__CLASSFacilityDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__CLASSFacilityDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__CLASSFacilityDictLN_CLASSObject = { "CLASSObject" , 99 , -1 };
G__linked_taginfo G__CLASSFacilityDictLN_IsotopicVector = { "IsotopicVector" , 99 , -1 };
G__linked_taginfo G__CLASSFacilityDictLN_maplEZAIcOdoublecOlesslEZAIgRcOallocatorlEpairlEconstsPZAIcOdoublegRsPgRsPgR = { "map<ZAI,double,less<ZAI>,allocator<pair<const ZAI,double> > >" , 99 , -1 };
G__linked_taginfo G__CLASSFacilityDictLN_vectorlEZAIcOallocatorlEZAIgRsPgR = { "vector<ZAI,allocator<ZAI> >" , 99 , -1 };
G__linked_taginfo G__CLASSFacilityDictLN_reverse_iteratorlEvectorlEZAIcOallocatorlEZAIgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ZAI,allocator<ZAI> >::iterator>" , 99 , -1 };
G__linked_taginfo G__CLASSFacilityDictLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__CLASSFacilityDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__CLASSFacilityDictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__CLASSFacilityDictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__CLASSFacilityDictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__CLASSFacilityDictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__CLASSFacilityDictLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__CLASSFacilityDictLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__CLASSFacilityDictLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__CLASSFacilityDictLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__CLASSFacilityDictLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__CLASSFacilityDictLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__CLASSFacilityDictLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__CLASSFacilityDictLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__CLASSFacilityDictLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__CLASSFacilityDictLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__CLASSFacilityDictLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__CLASSFacilityDictLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__CLASSFacilityDictLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__CLASSFacilityDictLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__CLASSFacilityDictLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__CLASSFacilityDictLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__CLASSFacilityDictLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__CLASSFacilityDictLN_maplEZAIcOTGraphmUcOlesslEZAIgRcOallocatorlEpairlEconstsPZAIcOTGraphmUgRsPgRsPgR = { "map<ZAI,TGraph*,less<ZAI>,allocator<pair<const ZAI,TGraph*> > >" , 99 , -1 };
G__linked_taginfo G__CLASSFacilityDictLN_maplEZAIcOEvolutionDatacOlesslEZAIgRcOallocatorlEpairlEconstsPZAIcOEvolutionDatagRsPgRsPgR = { "map<ZAI,EvolutionData,less<ZAI>,allocator<pair<const ZAI,EvolutionData> > >" , 99 , -1 };
G__linked_taginfo G__CLASSFacilityDictLN_CLASS = { "CLASS" , 99 , -1 };
G__linked_taginfo G__CLASSFacilityDictLN_CLASSFacility = { "CLASSFacility" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableCLASSFacilityDict() {
  G__CLASSFacilityDictLN_TClass.tagnum = -1 ;
  G__CLASSFacilityDictLN_TBuffer.tagnum = -1 ;
  G__CLASSFacilityDictLN_TMemberInspector.tagnum = -1 ;
  G__CLASSFacilityDictLN_TObject.tagnum = -1 ;
  G__CLASSFacilityDictLN_TNamed.tagnum = -1 ;
  G__CLASSFacilityDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__CLASSFacilityDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__CLASSFacilityDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__CLASSFacilityDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__CLASSFacilityDictLN_CLASSObject.tagnum = -1 ;
  G__CLASSFacilityDictLN_IsotopicVector.tagnum = -1 ;
  G__CLASSFacilityDictLN_maplEZAIcOdoublecOlesslEZAIgRcOallocatorlEpairlEconstsPZAIcOdoublegRsPgRsPgR.tagnum = -1 ;
  G__CLASSFacilityDictLN_vectorlEZAIcOallocatorlEZAIgRsPgR.tagnum = -1 ;
  G__CLASSFacilityDictLN_reverse_iteratorlEvectorlEZAIcOallocatorlEZAIgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__CLASSFacilityDictLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__CLASSFacilityDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__CLASSFacilityDictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__CLASSFacilityDictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__CLASSFacilityDictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__CLASSFacilityDictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__CLASSFacilityDictLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__CLASSFacilityDictLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__CLASSFacilityDictLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__CLASSFacilityDictLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__CLASSFacilityDictLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__CLASSFacilityDictLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__CLASSFacilityDictLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__CLASSFacilityDictLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__CLASSFacilityDictLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__CLASSFacilityDictLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__CLASSFacilityDictLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__CLASSFacilityDictLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__CLASSFacilityDictLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__CLASSFacilityDictLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__CLASSFacilityDictLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__CLASSFacilityDictLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__CLASSFacilityDictLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__CLASSFacilityDictLN_maplEZAIcOTGraphmUcOlesslEZAIgRcOallocatorlEpairlEconstsPZAIcOTGraphmUgRsPgRsPgR.tagnum = -1 ;
  G__CLASSFacilityDictLN_maplEZAIcOEvolutionDatacOlesslEZAIgRcOallocatorlEpairlEconstsPZAIcOEvolutionDatagRsPgRsPgR.tagnum = -1 ;
  G__CLASSFacilityDictLN_CLASS.tagnum = -1 ;
  G__CLASSFacilityDictLN_CLASSFacility.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableCLASSFacilityDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__CLASSFacilityDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__CLASSFacilityDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__CLASSFacilityDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__CLASSFacilityDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__CLASSFacilityDictLN_TNamed);
   G__get_linked_tagnum_fwd(&G__CLASSFacilityDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__CLASSFacilityDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__CLASSFacilityDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__CLASSFacilityDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__CLASSFacilityDictLN_CLASSObject);
   G__get_linked_tagnum_fwd(&G__CLASSFacilityDictLN_IsotopicVector);
   G__get_linked_tagnum_fwd(&G__CLASSFacilityDictLN_maplEZAIcOdoublecOlesslEZAIgRcOallocatorlEpairlEconstsPZAIcOdoublegRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__CLASSFacilityDictLN_vectorlEZAIcOallocatorlEZAIgRsPgR);
   G__get_linked_tagnum_fwd(&G__CLASSFacilityDictLN_reverse_iteratorlEvectorlEZAIcOallocatorlEZAIgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__CLASSFacilityDictLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__CLASSFacilityDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__CLASSFacilityDictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__CLASSFacilityDictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__CLASSFacilityDictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__CLASSFacilityDictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__CLASSFacilityDictLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__CLASSFacilityDictLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__CLASSFacilityDictLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__CLASSFacilityDictLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__CLASSFacilityDictLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__CLASSFacilityDictLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__CLASSFacilityDictLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__CLASSFacilityDictLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__CLASSFacilityDictLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__CLASSFacilityDictLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__CLASSFacilityDictLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__CLASSFacilityDictLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__CLASSFacilityDictLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__CLASSFacilityDictLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__CLASSFacilityDictLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__CLASSFacilityDictLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__CLASSFacilityDictLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__CLASSFacilityDictLN_maplEZAIcOTGraphmUcOlesslEZAIgRcOallocatorlEpairlEconstsPZAIcOTGraphmUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__CLASSFacilityDictLN_maplEZAIcOEvolutionDatacOlesslEZAIgRcOallocatorlEpairlEconstsPZAIcOEvolutionDatagRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__CLASSFacilityDictLN_CLASS);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__CLASSFacilityDictLN_CLASSFacility),sizeof(CLASSFacility),-1,61696,(char*)NULL,G__setup_memvarCLASSFacility,G__setup_memfuncCLASSFacility);
}
extern "C" void G__cpp_setupCLASSFacilityDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupCLASSFacilityDict()");
  G__set_cpp_environmentCLASSFacilityDict();
  G__cpp_setup_tagtableCLASSFacilityDict();

  G__cpp_setup_inheritanceCLASSFacilityDict();

  G__cpp_setup_typetableCLASSFacilityDict();

  G__cpp_setup_memvarCLASSFacilityDict();

  G__cpp_setup_memfuncCLASSFacilityDict();
  G__cpp_setup_globalCLASSFacilityDict();
  G__cpp_setup_funcCLASSFacilityDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncCLASSFacilityDict();
  return;
}
class G__cpp_setup_initCLASSFacilityDict {
  public:
    G__cpp_setup_initCLASSFacilityDict() { G__add_setup_func("CLASSFacilityDict",(G__incsetup)(&G__cpp_setupCLASSFacilityDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initCLASSFacilityDict() { G__remove_setup_func("CLASSFacilityDict"); }
};
G__cpp_setup_initCLASSFacilityDict G__cpp_setup_initializerCLASSFacilityDict;

